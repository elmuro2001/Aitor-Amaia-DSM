ANOTACIONES TRABAJO CALENDARIO DSM.
    Aitor Muro Perez
    Amaia Vertiz Conde

** npx expo start --clear **

12/05/2025
  Amaia:
  He estudiado el uso de react-native-calendar. Para conseguir una vista básica es suficiente con importar "Calendar" de 'react-native-calendars' y envolverlo en un View. Luego lo importamos en App.js y lo mostramos. Nos construye la estructura básica del calendario.
  Ahora voy a estudiar cómo guardar las tareas y eventos, que igual resulta ser más complicado.
  Por ahora estoy estudiando el uso de AsyncStorage y a ver cómo resulta ¿Se guarda en local de forma permanente?
  He hecho la prueba y usando el AsyncStorage podemos guardar tareas (esa es la prueba básica que he hecho, donde pones el nombre de tarea y le das a CREAR TAREA y te crea algo básico para confirmar que funciona).
  Usaremos AsyncStorage para que todo se quede guardado en local. A futuro podemos valorar que se conecte al google calendar o algo por el estilo.

  * Nota: A futuro convendría tomar la "traducción al español" desde alguna librería y no como pone en la documentación de hardcodear los días de la semana y meses.
          Tengo que estudiar bien dónde se guarda esta info y cómo gestionarla apropiadamente cuando metamos mucha información de tarea, evento etc.

14/05/2025
  Amaia: 
  El lunes estudiamos cómo funciona el calendario react-native-calendar y sabemos que no necesitamos ninguna librería externa para definir los días de la semana, mes y año.
  Además, vimos que podíamos usar AsyncStorage para almacenar las tareas/eventos en local. 

  AsyncStorage puede entenderse como el equivalente al LocalStorage de web pero para móvil.

  Como ya teníamos esa información, nos hemos dedicado a crear las tareas del proyecto, asignarlas y estimar el tiempo que nos llevarían.
  Además, hemos pasado las tareas que vamos a empezar del ToDo a "En proceso". Aitor ha pasado mi tarea completada (pendiente de revisión) a Revisada.
  
21/05/2025:
  Amaia: 
  Mayor parte del tiempo de clase la hemos usado para las presentaciones. Aun así, hemos avanzado:

  Como estaba estudiando temas de diseño, he encontrado esto:
  <Calendar
  // Collection of dates that have to be marked. Default = {}
  markedDates={{
    '2012-05-16': {selected: true, marked: true, selectedColor: 'blue'},
    '2012-05-17': {marked: true},
    '2012-05-18': {marked: true, dotColor: 'red', activeOpacity: 0},
    '2012-05-19': {disabled: true, disableTouchEvent: true}
  }}
/>
Aquí podemos ver que podemos poner los puntitos los días que hay tareas.

Y para marcar periodos y puntos:
<Calendar
  markingType={'period'}
  markedDates={{
    '2012-05-15': {marked: true, dotColor: '#50cebb'},
    '2012-05-16': {marked: true, dotColor: '#50cebb'},
    '2012-05-21': {startingDay: true, color: '#50cebb', textColor: 'white'},
    '2012-05-22': {color: '#70d7c7', textColor: 'white'},
    '2012-05-23': {color: '#70d7c7', textColor: 'white', marked: true, dotColor: 'white'},
    '2012-05-24': {color: '#70d7c7', textColor: 'white'},
    '2012-05-25': {endingDay: true, color: '#50cebb', textColor: 'white'}
  }}
/>

Además, he encontrado esta página web donde explica bastante bien el tema de customizar el estilo en react-native-calendar:
https://medium.com/@wvdelden99/how-to-style-your-calendar-in-react-native-2150196c00bc
